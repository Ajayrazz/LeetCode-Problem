class MinStack {
    Stack<Integer> stack;
    Stack<Integer> minStack;
    public MinStack() {
        //initializing the stack
        stack = new Stack<>();
        //initializing the minStack
        minStack = new Stack<>();
    }
    
    public void push(int val) {
        //pushing the element to the stack
        stack.push(val);
        //pushing the element to the minStack
        if(minStack.isEmpty() || minStack.peek() > val){
            minStack.push(val);
        }
        else {
            minStack.push(minStack.peek());
        }
    }
    
    public void pop() {
        //poping from the stack
        stack.pop();
        //poping from the minStack
        minStack.pop();
    }
    
    public int top() {
        //return the top element of stack
        return stack.peek();
    }
    
    public int getMin() {
        //return the top element of the stack minStack as it contain the minvalue
        return minStack.peek();
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
