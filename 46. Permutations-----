class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        permute_return(nums , 0 , result);
        return result;
    }

    //function for returning the permutation
    private List<List<Integer>> permute_return(int[] nums , int currentIndex , List<List<Integer>> ans){
        if(currentIndex == nums.length-1){
            List<Integer> res = new ArrayList<>();
            //using for each loop to put element of nums in res
            for(int num : nums){
                res.add(num);
            }
            ans.add(res);
            return ans;
        }

        for(int index=currentIndex; index<nums.length; index++){
            swap(nums , currentIndex , index);
            permute_return(nums , currentIndex+1 , ans);
            swap(nums , currentIndex , index);
        }

        return ans;
    }

    public void swap(int[] nums , int i , int j){
        int temp = nums[j];
        nums[j] = nums[i];
        nums[i] = temp;
    }
}
