/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        return helper(head);
    }

    //function for checking 
    private boolean helper(ListNode head){
        //size of LinkedList
        int size = 0;
        ListNode temp = head;
        while(temp != null){
            size++;
            temp = temp.next;
        }

        //create array of length size to store linkedlist element
        int[] arr = new int[size];
        int idx = 0;
        temp = head;
        while(temp != null){
            arr[idx++] = temp.val;
            temp = temp.next;
        }

        //for loop for checking whether the element present in linkedlist is palindrome or not
        for(int i=0; i<size/2; i++){
            if(arr[i] != arr[size-1-i]){
                return false;
            }
        }
        return true;
    }
}
