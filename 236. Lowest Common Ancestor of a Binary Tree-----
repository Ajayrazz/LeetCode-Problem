/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        //Base Case
        if(root == null || root == p || root == q){
            return root;
        }

        //Traversing the left sub tree
        TreeNode left = lowestCommonAncestor(root.left, p, q);
        //Traversing the right sub tree
        TreeNode right = lowestCommonAncestor(root.right, p, q);

        if(left != null && right != null){
            return root;
        }
        else if(left != null){
            return left;
        }
        else {
            return right;
        }
    }
}
