class Solution {
    public int countCompleteSubarrays(int[] nums) {
        HashSet<Integer>set=new HashSet<>();
        for(int num:nums){
            set.add(num);
        }
        return count(nums,set.size())-count(nums,set.size()-1);
    }
    public int count(int[]nums, int k){
        if(k<0) return 0;
        HashMap<Integer,Integer>map=new HashMap<>();
        int left=0;
        int right=0;
        int count=0;
        while(right<nums.length){
            map.put(nums[right],map.getOrDefault(nums[right],0)+1);
            while(map.size()>k){
                map.put(nums[left],map.get(nums[left])-1);
                if(map.get(nums[left])==0)  map.remove(nums[left]);
                left++;
            }
            count+=right-left+1;
            right++;
        }
        return count;
    }
}
