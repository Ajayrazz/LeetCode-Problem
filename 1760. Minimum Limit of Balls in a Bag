class Solution {
    public int minimumSize(int[] nums, int maxOperations) {
        int high =0;
        for(int i=0;i<nums.length;i++) {
            high = Math.max(high, nums[i]);
        }
        int low =1;
        int ans =0;
        while(low <=high){
            int mid = low + (high-low)/2;
            if(isValid(nums, maxOperations, mid)) {
                ans = mid;
                high = mid-1;
            } else {
                low = mid+1;
            }
        }
        return ans;
    }

    private boolean isValid(int nums[], int maxOperations, int mid) {
        int totalOps = 0;
        for(int i=0;i<nums.length;i++) {
            totalOps += nums[i]%mid==0 ? nums[i]/mid-1: nums[i]/mid;
            if(totalOps > maxOperations) {
                return false;
            }
        }
        return true;
    }
}
