/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        //base case
        if(root == null){
            return ans;
        }
        //create a queue
        Queue<TreeNode> queue = new ArrayDeque<>();
        queue.add(root);

        //case 1
        while(queue.size() != 0){
            List<Integer> list = new ArrayList<>();
            int size = queue.size();
            while(size-- > 0){
                TreeNode rem = queue.poll();
                list.add(rem.val);
                //case 2
                if(rem.left != null){
                    queue.add(rem.left);
                }
                //case 4
                if(rem.right != null){
                    queue.add(rem.right);
                }
            }
            ans.add(list);
        }
        return ans;
    }
}
