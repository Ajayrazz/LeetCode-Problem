/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        //base case
        if(root == null){
            return result;
        }
        Queue<TreeNode> q = new ArrayDeque<>();
        q.add(root);

        while(q.size() != 0){
            int s = q.size();
            List<Integer> ans = new ArrayList<>();
            while(s-- > 0){
                TreeNode current = q.poll();
                ans.add(current.val);

                if(current.left != null){
                    q.add(current.left);
                }

                if(current.right != null){
                    q.add(current.right);
                }
            }
            result.add(ans);
        }
        return result;
    }
}
