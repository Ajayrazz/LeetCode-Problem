/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isBalanced(TreeNode root) {
        return dfsHeight(root) != -1;
    }

    //Helper function for dfsHeight
    private int dfsHeight(TreeNode root) {
        if(root == null) return 0;
        int leftHt = dfsHeight(root.left);
        if(leftHt == -1) return -1;
        int rightHt = dfsHeight(root.right);
        if(rightHt == -1) return -1;

        if(Math.abs(leftHt - rightHt) > 1) {
            return -1;
        }

        return Math.max(leftHt, rightHt) + 1;
    }
}
