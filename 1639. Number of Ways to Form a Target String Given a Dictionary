class Solution {

    public int numWays(String[] words, String target) {
        int wordLength = words[0].length();
        int targetLength = target.length();
        final int MOD = 1000000007;

        int[][] charFrequency = new int[wordLength][26];
        for (String word : words) {
            for (int j = 0; j < wordLength; ++j) {
                charFrequency[j][word.charAt(j) - 'a']++;
            }
        }

        long[][] dp = new long[wordLength + 1][targetLength + 1];

        for (int currWord = 0; currWord <= wordLength; ++currWord) {
            dp[currWord][0] = 1;
        }

        for (int currWord = 1; currWord <= wordLength; ++currWord) {
            for (int currTarget = 1; currTarget <= targetLength; ++currTarget) {
                
                dp[currWord][currTarget] = dp[currWord - 1][currTarget];

                int curPos = target.charAt(currTarget - 1) - 'a';
                dp[currWord][currTarget] +=
                    (charFrequency[currWord - 1][curPos] *
                        dp[currWord - 1][currTarget - 1]) %
                    MOD;
                dp[currWord][currTarget] %= MOD;
            }
        }

        return (int) dp[wordLength][targetLength];
    }
}
