class Solution {
    public int largestRectangleArea(int[] heights) {
        Stack<Integer> stack = new Stack<>();
        int max_area = 0;

        for(int i = 0; i < heights.length; i++){
            while(!stack.isEmpty() && heights[stack.peek()] > heights[i]){
                int element = stack.peek();
                stack.pop();
                int nse = i;
                int pse = stack.isEmpty() ? -1 : stack.peek();

                //update the maxarea
                max_area = Math.max(max_area, heights[element] * (nse - pse - 1));
            }

            stack.push(i);
        }

        while(!stack.isEmpty()){
            int element = stack.peek();
            stack.pop();
            int nse = heights.length;
            int pse = stack.isEmpty() ? -1 : stack.peek();

            //update the maxarea
            max_area = Math.max(max_area, heights[element] * (nse - pse - 1));
        }

        return max_area;
    }
}
