/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        //algorithm to calculate size of linkedlist
        int size = 0;
        ListNode temp = head;
        while(temp != null){
            size++;
            temp = temp.next;
        }

        int[] arr = new int[size];
        //putting the element of linkedlist to arr
        ListNode temp2 = head;
        int idx = 0;
        while(temp2 != null){
            arr[idx] = temp2.val;
            idx++;
            temp2 = temp2.next;
        }

        //algo to check whether it is palindrome or not
        int mid = size/2;
        //using for loop
        for(int i=0; i<mid; i++){
            if(arr[i] != arr[size-1-i]){
                return false;
            }
        }

        return true;
    }
}
